<?xml version="1.0"?>
<robot name="differential_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
<!-- <xacro:include filename="$(find turtlebot3_description)/urdf/turtlebot3_burger.gazebo.xacro"/> -->
<xacro:include filename="$(find velodyne_description)/urdf/VLP16.urdf.xacro"/>
<!-- <xacro:include filename="$(find hector_sensors_description)/urdf/hokuyo_utm30lx.urdf.xacro"/> -->
<!-- <xacro:include filename="$(find turtlebot3_description)/urdf/kinectv2.urdf.xacro"/> -->
<!-- <xacro:include filename="$(find turtlebot3_description)/urdfx/hokuyo.urdf.xacro"/> -->
  
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.203125 0.23828125 0.28515625 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.80078125 0.12890625 0.1328125 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="link_left_wheel1">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_left_wheel2">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_right_wheel1">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_right_wheel2">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>joint_left_wheel1</leftJoint>
      <leftJoint>joint_left_wheel2</leftJoint>
      <rightJoint>joint_right_wheel1</rightJoint>
      <rightJoint>joint_right_wheel2</rightJoint>
      <wheelSeparation>0.48</wheelSeparation>
      <wheelDiameter>0.16</wheelDiameter>
      <torque>0.1</torque>
      <publishOdomTF>true</publishOdomTF>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo> -->

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <leftFrontJoint>joint_left_wheel1</leftFrontJoint>
      <rightFrontJoint>joint_right_wheel1</rightFrontJoint>
      <leftRearJoint>joint_left_wheel2</leftRearJoint>
      <rightRearJoint>joint_right_wheel2</rightRearJoint>
      <wheelSeparation>0.48</wheelSeparation>
      <wheelDiameter>0.48</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <torque>20</torque>
      <topicName>cmd_vel</topicName>
      <broadcastTF>false</broadcastTF>
    </plugin>
  </gazebo>

<!-- IMU -->
 <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.092 0 0.08"/>
  </joint>
  <link name="imu_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00000015" ixy="0" ixz="0" iyy="0.00000015" iyz="0" izz="0.00000015"/>
    </inertial>
  </link>
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>1</always_on>
      <update_rate>1000</update_rate>
      <visualize>1</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <alwaysOn>true</alwaysOn>
        <bodyName>imu_link</bodyName>
        <frameName>imu_link</frameName>
        <topicName>imu</topicName>
        <serviceName>imu_service</serviceName>
        <gaussianNoise>0.0</gaussianNoise>
        <updateRate>0</updateRate>
        <imu>
          <noise>
            <type>gaussian</type>
            <rate>
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </rate>
            <accel>
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </accel>
          </noise>
        </imu>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

<!-- BASE LASER lidar2d_ttb SCAN -->
  <!-- <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0.29 0 0.1301 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>270</samples>
            <resolution>1</resolution>
            <min_angle>-2.26889</min_angle>
            <max_angle>2.2689</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_link</frameName>
      </plugin>
      <always_on>1</always_on>
      <alwaysOn>true</alwaysOn>
    </sensor>
  </gazebo>
   -->
   <!-- it's better to define them once at the beginning and just refer to them throughout the rest of the file. It's more concise and if you ever want to change a material's definition, you have just one place to chang -->



<!-- BASE_SCAN -->
  <!-- <link name="base_scan">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
      </geometry>

      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0.29 0 0.1301" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.0315" radius="0.055"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.114" />
      <origin xyz="0.29 0 0.1301" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link> -->
  
  <!-- base link -->

    <link name="base_link">
    <!-- pose and inertial -->
    <inertial>
      <mass value="10"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1.66667" ixy="0" ixz="0" iyy="1.66667" iyz="0" izz="1.66667"/>
    </inertial>
    <collision name="base_collision">
      <origin xyz="0.0 0.0  0.05" rpy="0 0 0"/>
      <geometry>
        <box size="0.56 0.418 0.23"/>
      </geometry>
    </collision>
    <visual name="base_visual">
      <origin xyz="0.0 0.0  0.05" rpy="0 0 0"/>
      <geometry>
        <box size="0.56 0.418 0.23"/>
      </geometry>
      <material name="orange"/>
    </visual>

  </link>


  


  



    <!-- HOKUYO LIDAR -->
    <gazebo reference="base_scan">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0.3 0.0 0.20 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>30</update_rate>
      <always_on>1</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>180</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
            <!-- <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle> -->
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_link</frameName>
      </plugin>
      <!-- <always_on>1</always_on> -->
    </sensor>
  </gazebo>

  <link name="base_scan">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://mybot_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="scan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin xyz="0.3 0 0.20" rpy="0 0 0"/>
  </joint>

  <!-- <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 0 1" />
    <origin xyz="0 0.22 0.05" rpy="0 0 1.570796"/>
    <parent link="base_link"/>
    <child link="base_scan"/>
  </joint> -->


  <!-- right wheel1 -->
  <link name="link_right_wheel1">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.145833" ixy="0" ixz="0" iyy="0.145833" iyz="0" izz="0.125"/>
    </inertial>
    <collision name="link_right_wheel1_collision">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
    </collision>
    <visual name="link_right_wheel1_visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  
  <!-- joint_right_wheel1 -->
  <joint name="joint_right_wheel1" type="revolute">
    <parent link="base_link"/>
    <child link="link_right_wheel1"/>
    <origin xyz="0.2 -0.24 -0.03" rpy="-1.57265  0       0"/>
    <axis xyz="0 0 1"/>
    <limit lower="-1.79769e+308" upper="1.79769e+308" effort="-1.0" velocity="-1.0"/>
  </joint>

  <!-- right wheel2 -->
  <link name="link_right_wheel2">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.145833" ixy="0" ixz="0" iyy="0.145833" iyz="0" izz="0.125"/>
    </inertial>
    <collision name="link_right_wheel2_collision">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
    </collision>
    <visual name="link_right_wheel2_visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  
  <!-- joint_right_wheel2 -->
  <joint name="joint_right_wheel2" type="revolute">
    <parent link="base_link"/>
    <child link="link_right_wheel2"/>
    <origin xyz="-0.2 -0.24 -0.03" rpy="-1.57265  0       0"/>
    <axis xyz="0 0 1"/>
    <limit lower="-1.79769e+308" upper="1.79769e+308" effort="-1.0" velocity="-1.0"/>
  </joint>






  
  <!-- left wheel1 -->
   <link name="link_left_wheel1">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.145833" ixy="0" ixz="0" iyy="0.145833" iyz="0" izz="0.125"/>
    </inertial>
    <collision name="wheel_left_collilink_left_wheel1_collisionsion">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
    </collision>
    <visual name="link_left_wheel1_visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  
  <!-- joint_left_wheel1 -->
  <joint name="joint_left_wheel1" type="revolute">
    <parent link="base_link"/>
    <child link="link_left_wheel1"/>
    <origin xyz="0.2  0.24 -0.03" rpy="-1.57265  0       0"/>
    <axis xyz="0  0 1"/>
    <limit lower="-1.79769e+308" upper="1.79769e+308" effort="-1.0" velocity="-1.0"/>
  </joint>



    <!-- left wheel2 -->
   <link name="link_left_wheel2">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.145833" ixy="0" ixz="0" iyy="0.145833" iyz="0" izz="0.125"/>
    </inertial>
    <collision name="wheel_left_collilink_left_wheel2_collisionsion">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
    </collision>
    <visual name="link_left_wheel2_visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.08" length="0.06"/>
      </geometry>
      <material name="grey"/>
    </visual>
  </link>
  
  <!-- joint_left_wheel2 -->
  <joint name="joint_left_wheel2" type="revolute">
    <parent link="base_link"/>
    <child link="link_left_wheel2"/>
    <origin xyz="-0.2  0.24 -0.03" rpy="-1.57265  0       0"/>
    <axis xyz="0  0 1"/>
    <limit lower="-1.79769e+308" upper="1.79769e+308" effort="-1.0" velocity="-1.0"/>
  </joint>



</robot>